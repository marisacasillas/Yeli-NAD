avg.correct
avg.correct <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
avg.correct
avg.correct.edu <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
avg.correct.edu
ggplot(avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
avg.correct <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
# compute the average accuracy across conditions and experiments
# splitting by education group
avg.correct.edu <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
# plot the mean condition-by-experiment accuracy
ggplot(avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
# compute the by-participant averages for accuracy and RT
# (including condition, experiment, and education info)
by.ptcp.avgs <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
by.ptcp.avgs
ggplot(data = by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
# plot the reaction times across all trials (yowzah!)
ggplot(data = all.analyzable.data,
aes(x = response.dur, group = education)) +
facet_grid(~ competitor.type + education) +
geom_histogram(stat = "bin") +
geom_vline(xintercept = 2, color = "red") +
geom_vline(xintercept = 4, color = "blue")
ggplot(data = all.analyzable.data,
aes(x = response.dur, group = education)) +
facet_grid(~ competitor.type + education) +
geom_histogram(stat = "bin", binwidth = 1) +
geom_vline(xintercept = 2, color = "red") +
geom_vline(xintercept = 4, color = "blue")
ggplot(data = all.analyzable.data,
aes(x = response.dur, group = education)) +
facet_grid(~ competitor.type + education) +
geom_histogram(stat = "bin", binwidth = 2) +
geom_vline(xintercept = 2, color = "red") +
geom_vline(xintercept = 4, color = "blue")
avg.rt <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average RT for SEG and GEN
summarize(mean_rt = mean(response.dur)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.mean_rt = mean(mean_rt))
avg.rt
avg.rt.edu <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average RT for SEG and GEN
summarize(mean_rt = mean(response.dur)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.mean_rt = mean(mean_rt),
n_ptcps = n())
avg.rt.edu
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education))
imm.resp.data <- filter(all.analyzable.data, response.dur <= 4)
nrow(imm.resp.data)
nrow(all.analyzable.data)
277/738
RT.max <- 4 # what does RF think?
imm.resp.data <- filter(all.analyzable.data, response.dur <= RT.max)
nrow(imm.resp.data)/nrow(all.analyzable.data)
ir.avg.correct <- imm.resp.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
ir.avg.correct
ir.avg.correct.edu <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
ir.avg.correct.edu
ggplot(ir.avg.correct,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ir.avg.correct
# plot the mean condition-by-experiment accuracy
ggplot(ir.avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
by.ptcp.avgs <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
ir.by.ptcp.avgs <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
ggplot(data = ir.by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(data = ir.by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
RT.max <- 2 # what does RF think?
imm.resp.data <- filter(all.analyzable.data, response.dur <= RT.max)
# less than half of the data!!
nrow(imm.resp.data)/nrow(all.analyzable.data)
## ACCURACY ##
# compute the average accuracy across conditions and experiments
ir.avg.correct <- imm.resp.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
# compute the average accuracy across conditions and experiments
# splitting by education group
ir.avg.correct.edu <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
# plot the mean condition-by-experiment accuracy
ggplot(ir.avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ir.by.ptcp.avgs <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
# plot the SEG and GEN accuracy scores by participant, split on
# education and experiment type (part word vs. phantom word)
ggplot(data = ir.by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
RT.max <- 10 # what does RF think?
acc.by.rt <- all.analyzable.data %>%
mutate(rt_sec = floor(response.dur)) %>%
group_by(rt_sec, education) %>%
summarize(avg_acc = mean(correct.bin))
acc.by.rt <- all.analyzable.data %>%
mutate(rt_sec = floor(response.dur)) %>%
group_by(rt_sec, education, competitor.type, test.type) %>%
summarize(avg_acc = mean(correct.bin))
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education))
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education))
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_histogram(stat = "bin", binwidth = 1)
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_bar(stat = "bin", binwidth = 1)
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_bar()
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education))
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_smooth()
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_vline(xintercept = 5, lty = "dashed") +
geom_vline(xintercept = 10, lty = "solid")
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_vline(xintercept = 5, lty = "dotted") +
geom_vline(xintercept = 10, lty = "dashed") +
geom_vline(xintercept = 15, lty = "solid")
RT.max <- 10 # what does RF think?
library("papaja")
library(tidyverse)
raw.data <- "logfiles/trials/all.csv"
stim.data <- "stimuli/word_files.csv"
ptcp.data <- "metadata/participant_metadata_nonprivate.csv"
set.seed(42)
RT.max <- 10 # what does RF think?
all.test.data <- read_csv(raw.data) %>%
mutate(EventDur = EndTime2 - BeginTime2,
TagSt = paste0("st", Tag)) %>%
spread(Tag, EventDur) %>%
spread(TagSt, BeginTime2) %>%
rename(foil.dur = "'F'", true.dur = "'T'",
pick1.dur = "'ONE'", pick2.dur = "'TWO'",
foil.start = "st'F'", true.start = "st'T'",
pick1.start = "st'ONE'", pick2.start = "st'TWO'") %>%
mutate(
response = ifelse(!is.na(pick1.dur), 1,
ifelse(is.na(pick2.dur), NA, 2)),
response.dur = ifelse(!is.na(pick1.dur), pick1.dur,
ifelse(is.na(pick2.dur), NA, pick2.dur)),
response.start = ifelse(!is.na(pick1.dur), pick1.start,
ifelse(is.na(pick2.start), NA, pick2.start))) %>%
group_by(Participant, StimulusID) %>%
summarize(foil.dur = min(foil.dur, na.rm = TRUE),
foil.start = min(foil.start, na.rm = TRUE),
true.dur = min(true.dur, na.rm = TRUE),
true.start = min(true.start, na.rm = TRUE),
response.num = min(response, na.rm = TRUE),
response.dur = min(response.dur, na.rm = TRUE),
response.start = min(response.start, na.rm = TRUE)) %>%
mutate(pair.order = ifelse(foil.start < true.start, "foil-true", "true-foil"),
response.type = case_when(
pair.order == "foil-true" & response.num == 1 ~ "foil",
pair.order == "foil-true" & response.num == 2 ~ "true",
pair.order == "true-foil" & response.num == 1 ~ "true",
pair.order == "true-foil" & response.num == 2 ~ "foil"
),
correct.bin = ifelse(response.type == "true", 1, 0),
experiment = as.numeric(substr(StimulusID, 11, 11)),
version = as.numeric(substr(StimulusID, 8, 8)),
item.pair = substr(StimulusID, 10, 10)) %>%
rename(participant = "Participant") %>%
select(experiment, version, participant,
item.pair, correct.bin, pair.order,
response.type, response.num, response.dur, response.start,
true.dur, true.start, foil.dur, foil.start) %>%
arrange(experiment, version, participant, item.pair)
all.stim.data <- read_csv(stim.data)
correct.stims <- filter(all.stim.data, selection == "correct") %>%
mutate(experiment = ifelse(exp1 == 1, 1, 2)) %>%
select(type, structure, pos1, pos2, pos3,
Rffilename, experiment, pair, phase) %>%
rename(true.type = type, true.structure = structure,
true.pos1 = pos1, true.pos2 = pos2, true.pos3 = pos3,
true.RFname = Rffilename)
incorrect.stims <- filter(all.stim.data, selection == "incorrect")  %>%
mutate(experiment = ifelse(exp1 == 1, 1, 2)) %>%
select(type, structure, pos1, pos2, pos3, Rffilename, experiment, pair) %>%
rename(foil.type = type, foil.structure = structure,
foil.pos1 = pos1, foil.pos2 = pos2, foil.pos3 = pos3,
foil.RFname = Rffilename)
all.test.stims <- full_join(correct.stims, incorrect.stims)
all.ptcp.info <- read_csv(ptcp.data)
test.ptcps <- filter(all.ptcp.info, is.na(failure)) %>%
select(-failure)
all.analyzable.data <- left_join(
all.test.data, all.test.stims,
by = c("experiment" = "experiment", "item.pair" = "pair")) %>%
left_join(test.ptcps,
by = c("experiment" = "experiment", "version" = "version",
"participant" = "participant")) %>%
mutate(education = case_when(
grade < 8 ~ "primary",
grade >=8 & grade < 10 ~ "secondary",
grade >= 10 ~ "preparatory"),
test.type = ifelse(
phase == "generalization", "GEN", "SEG"),
competitor.type = ifelse(
experiment == 1, "part-word", "phantom-word"))
# reset factor-level ordering for education
all.analyzable.data$education <- as.factor(all.analyzable.data$education)
all.analyzable.data <- all.analyzable.data %>%
mutate(education = fct_relevel(education, "primary", "secondary"))
# compute the average accuracy across conditions and experiments
avg.correct <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
# compute the average accuracy across conditions and experiments
# splitting by education group
avg.correct.edu <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
# plot the mean condition-by-experiment accuracy
ggplot(avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
# compute the by-participant averages for accuracy and RT
# (including condition, experiment, and education info)
by.ptcp.avgs <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
# plot the SEG and GEN accuracy scores by participant, split on
# education and experiment type (part word vs. phantom word)
ggplot(data = by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
by.ptcp.avgs <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
ggplot(data = by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(data = by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(data = all.analyzable.data,
aes(x = response.dur, group = education)) +
facet_grid(~ competitor.type + education) +
geom_histogram(stat = "bin", binwidth = 1) +
geom_vline(xintercept = 2, color = "red") +
geom_vline(xintercept = 4, color = "blue")
avg.rt <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average RT for SEG and GEN
summarize(mean_rt = mean(response.dur)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.mean_rt = mean(mean_rt))
avg.rt.edu <- all.analyzable.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average RT for SEG and GEN
summarize(mean_rt = mean(response.dur)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.mean_rt = mean(mean_rt),
n_ptcps = n())
# plot the mean condition-by-experiment RT
ggplot(avg.rt.edu,
aes(x = test.type, y = avg.mean_rt, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education))
# plot the overal relationship between accuracy and RT
acc.by.rt <- all.analyzable.data %>%
mutate(rt_sec = floor(response.dur)) %>%
group_by(rt_sec, education, competitor.type, test.type) %>%
summarize(avg_acc = mean(correct.bin))
ggplot(acc.by.rt,
aes(x = rt_sec, y = avg_acc, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_vline(xintercept = 5, lty = "dotted") +
geom_vline(xintercept = 10, lty = "dashed") +
geom_vline(xintercept = 15, lty = "solid")
imm.resp.data <- filter(all.analyzable.data, response.dur <= RT.max)
# less than half of the data!!
nrow(imm.resp.data)/nrow(all.analyzable.data)
# compute the average accuracy across conditions and experiments
ir.avg.correct <- imm.resp.data %>%
group_by(competitor.type, participant, test.type) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute group average over participants for SEG and GEN
group_by(competitor.type, test.type) %>%
summarize(avg.prp_corr = mean(prp_corr))
ir.avg.correct.edu <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
# compute by-participant average accuracy for SEG and GEN
summarize(prp_corr = mean(correct.bin)) %>%
# compute education-group averages over participants for SEG and GEN
group_by(competitor.type, test.type, education) %>%
summarize(avg.prp_corr = mean(prp_corr),
n_ptcps = n())
ggplot(ir.avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ir.by.ptcp.avgs <- imm.resp.data %>%
group_by(competitor.type, participant, test.type, education) %>%
summarize(
prp_corr = mean(correct.bin),
rt_avg = mean(response.dur))
ggplot(data = ir.by.ptcp.avgs,
aes(x = test.type, y = prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(ir.avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_jitter(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
ggplot(ir.avg.correct.edu,
aes(x = test.type, y = avg.prp_corr, group = education)) +
facet_grid(~ competitor.type + education) +
geom_point(aes(color = education)) +
geom_path(aes(color = education)) +
geom_hline(yintercept = 0.5)
